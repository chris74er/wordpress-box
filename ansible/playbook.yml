---
- hosts: all
  become: yes

  vars:
    wordpress_host: 192.168.98.117
    install_apache: true
    install_oersi_plugin: true  # as long as the oersi-plugin is not available in the official wordpress-plugin-repository, we install it manually via a separate role
    wp_title: wordpress-example
    wp_admin_name: admin
    wp_admin_email: root@wordpress.box
    wp_admin_password: changeme
    wp_config_reverse_proxy: true
    dbname: wordpress
    dbuser: wordpress
    dbpassword: changeme
    dbport: 3306
    php_config:
      - key: upload_max_filesize
        value: 128M
      - key: post_max_size
        value: 128M

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install necessary dependencies
      apt:
        name: 
          - apache2
          - mysql-server
          - php
          - php-mysql
          - php-curl
          - curl
          - php-cli
        state: present

    - name: Start Apache service
      service:
        name: apache2
        state: started
        enabled: yes

    - name: Start MySQL service
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Secure MySQL installation
      mysql_secure_installation:
        login_user: root
        login_password: ""
        root_password: "{{ dbpassword }}"
        remove_anonymous_users: yes
        disallow_root_login_remotely: yes
        remove_test_database: yes
        state: present

    - name: Create MySQL database
      mysql_db:
        name: "{{ dbname }}"
        state: present

    - name: Create MySQL user
      mysql_user:
        name: "{{ dbuser }}"
        password: "{{ dbpassword }}"
        priv: "{{ dbname }}.*:ALL"
        state: present

    - name: Download WordPress
      get_url:
        url: https://wordpress.org/latest.tar.gz
        dest: /tmp/latest.tar.gz

    - name: Extract WordPress
      unarchive:
        src: /tmp/latest.tar.gz
        dest: /var/www
        remote_src: yes

    - name: Rename WordPress directory
      command: mv /var/www/wordpress /var/www/{{ wp_title }}
      args:
        creates: /var/www/{{ wp_title }}

    - name: Set correct permissions
      file:
        path: /var/www/{{ wp_title }}
        state: directory
        recurse: yes
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Create wp-config.php
      template:
        src: wp-config.php.j2
        dest: /var/www/{{ wp_title }}/wp-config.php
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Enable Apache rewrite module
      command: a2enmod rewrite

    - name: Set Apache to allow .htaccess overrides
      replace:
        path: /etc/apache2/apache2.conf
        regexp: 'AllowOverride None'
        replace: 'AllowOverride All'

    - name: Restart Apache
      service:
        name: apache2
        state: restarted

    - name: Download wp-cli
      get_url:
        url: https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
        dest: /usr/local/bin/wp
        mode: '0755'

    - name: Ensure wp-cli is executable
      file:
        path: /usr/local/bin/wp
        mode: '0755'
        state: file

    - name: Verify wp-cli installation
      command: wp --info
      register: wp_cli_info

    - name: Fail if wp-cli is not installed properly
      fail:
        msg: "wp-cli was not installed properly"
      when: wp_cli_info.rc != 0

    - name: Install WordPress
      command: >
        wp core install
        --url="http://{{ wordpress_host }}"
        --title="{{ wp_title }}"
        --admin_user="{{ wp_admin_name }}"
        --admin_password="{{ wp_admin_password }}"
        --admin_email="{{ wp_admin_email }}"
        --allow-root
      args:
        chdir: /var/www/{{ wp_title }}

    - name: Enable WordPress Multisite
      command: wp core multisite-convert --allow-root
      args:
        chdir: /var/www/{{ wp_title }}
      when: ansible_distribution == "Ubuntu"

    - name: Update wp-config.php for Multisite
      lineinfile:
        path: /var/www/{{ wp_title }}/wp-config.php
        insertafter: "/* That's all, stop editing! Happy publishing. */"
        line: |
          define('WP_ALLOW_MULTISITE', true);
          define('MULTISITE', true);
          define('SUBDOMAIN_INSTALL', false);
          $base = '/';
          define('DOMAIN_CURRENT_SITE', '{{ wordpress_host }}');
          define('PATH_CURRENT_SITE', '/');
          define('SITE_ID_CURRENT_SITE', 1);
          define('BLOG_ID_CURRENT_SITE', 1);
      when: ansible_distribution == "Ubuntu"

    - name: Create .htaccess for Multisite
      copy:
        dest: /var/www/{{ wp_title }}/.htaccess
        content: |
          <IfModule mod_rewrite.c>
          RewriteEngine On
          RewriteBase /
          RewriteRule ^index\.php$ - [L]

          # Add a trailing slash to /wp-admin
          RewriteRule ^wp-admin$ wp-admin/ [R=301,L]

          RewriteCond %{REQUEST_FILENAME} -f [OR]
          RewriteCond %{REQUEST_FILENAME} -d
          RewriteRule ^ - [L]
          RewriteRule ^(wp-(content|admin|includes).*) $1 [L]
          RewriteRule ^(.*\.php)$ $1 [L]
          RewriteRule . index.php [L]
          </IfModule>
      when: ansible_distribution == "Ubuntu"

    - name: Set correct permissions
      file:
        path: /var/www/{{ wp_title }}
        state: directory
        recurse: yes
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Create Subfolder Sites
      shell: |
        wp site create --slug=eins --title="Eins Multisite" --email="{{ wp_admin_email }}" --allow-root
        wp site create --slug=zwei --title="Zwei Multisite" --email="{{ wp_admin_email }}" --allow-root
        wp site create --slug=drei --title="Drei Multisite" --email="{{ wp_admin_email }}" --allow-root
      args:
        chdir: /var/www/{{ wp_title }}
      when: ansible_distribution == "Ubuntu"
